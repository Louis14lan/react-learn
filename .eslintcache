[{"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\index.js":"1","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\App.js":"2","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\reportWebVitals.js":"3","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\Home.js":"4","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\RefComponent.js":"5","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\HookExample.js":"6","C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\FluxExample.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":593,"mtime":1606894277733,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2162,"mtime":1606972276866,"results":"12","hashOfConfig":"9"},{"size":721,"mtime":1606963103837,"results":"13","hashOfConfig":"9"},{"size":525,"mtime":1606963088044,"results":"14","hashOfConfig":"9"},{"size":2912,"mtime":1606963079803,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"y6283f",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\index.js",[],["32","33"],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\App.js",[],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\reportWebVitals.js",[],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\Home.js",[],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\RefComponent.js",[],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\HookExample.js",[],"C:\\Users\\Liu Lang\\Desktop\\2020\\react-learn\\src\\examples\\FluxExample.js",["34"],"import { EventEmitter } from \"events\";\r\nimport { Dispatcher } from \"flux\";\r\nimport { Component } from \"react\";\r\n\r\nexport default function FluxExample(){\r\n    return <div>\r\n        <h2>FluxExample</h2>\r\n        <FluxExampleChild1></FluxExampleChild1>\r\n        <FluxExampleChild2></FluxExampleChild2>\r\n    </div>\r\n}\r\nclass FluxExampleChild1 extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            items: Store.getAll()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Store.addChageListener(this._onchage);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        Store.removeEventListener(this._onchage);\r\n    }\r\n\r\n    _onchage = ()=>{\r\n        this.setState({\r\n            items:Store.getAll()\r\n        })\r\n    }\r\n\r\n    addItem = ()=>{\r\n        ButtonAction.addItemAction('haha')\r\n    }\r\n\r\n\r\n    render(){\r\n        return <div>\r\n            <h3>child1</h3>\r\n            <MyButton click={this.addItem}></MyButton>\r\n            <ul>{this.state.items.map(item=><li>item</li>)}</ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nclass FluxExampleChild2 extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            items: Store.getAll()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        Store.addChageListener(this._onchage);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        Store.removeEventListener(this._onchage);\r\n    }\r\n\r\n    _onchage = ()=>{\r\n        this.setState({\r\n            items:Store.getAll()\r\n        })\r\n    }\r\n\r\n    addItem = ()=>{\r\n        ButtonAction.addItemAction('haha')\r\n    }\r\n\r\n\r\n    render(){\r\n        return <div>\r\n            <h3>child2</h3>\r\n            <MyButton click={this.addItem}></MyButton>\r\n            <ul>{this.state.items.map(item=><li>item</li>)}</ul>\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction MyButton(prop){\r\n    return <button onClick={prop.click}>\r\n        add item\r\n    </button>\r\n}\r\n\r\n// Action\r\nconst ButtonAction = {\r\n    addItemAction:function(val){\r\n        ButtonDispatch.dispatch({\r\n            type:'ADDITEM',\r\n            text: val\r\n        })\r\n    }\r\n}\r\n\r\n// Dispatch\r\n// 需要额外调用flux库中的Dispatcher类\r\nconst ButtonDispatch = new Dispatcher();\r\nButtonDispatch.register(function(action){\r\n    switch(action.type){\r\n        case 'ADDITEM':\r\n            Store.addItem(action.text)\r\n            Store.emitChange()\r\n    }\r\n})\r\n\r\n// Store\r\n// 需要依赖events库中的EventEmitter对事件进行发布订阅\r\nconst Store = Object.assign({},EventEmitter.prototype,{\r\n    storeList: [],\r\n\r\n    getAll:function(){\r\n        return this.storeList;\r\n    },\r\n    \r\n    addItem: function(text){\r\n        this.storeList.push(text);\r\n    },\r\n\r\n    emitChange: function(){\r\n        this.emit('change');\r\n    },\r\n\r\n    addChageListener: function(callback){\r\n        this.on('change',callback);\r\n    },\r\n\r\n    removeEventListener: function(callback){\r\n        this.removeListener('change',callback)\r\n    }\r\n})\r\n\r\n\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":104,"column":5,"nodeType":"41","messageId":"42","endLine":108,"endColumn":6},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]